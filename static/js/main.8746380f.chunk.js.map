{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","switcher","condition","product","selected","App","state","selectedGood","isSelected","handleClickTitleButton","setState","handleClickProductButton","this","className","classNames","type","onClick","map","isProductSelected","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQF,SAASC,EACPC,GAGU,IAFVC,EAES,uDAFC,GACVC,EACS,uDADE,GAEX,OAAID,IAAYC,IAIZF,EAOC,IAAMG,EAAb,4MACEC,MAAyB,CACvBC,aAAc,MACdC,YAAY,GAHhB,EAMEC,uBAAyB,kBACvB,EAAKC,SAAS,CACZF,YAAY,KARlB,EAYEG,yBAA2B,SACzBR,EACAK,EACAD,GAEA,EAAKG,SAAS,CACZH,aAAcJ,EACdK,WAAYP,EACVO,EACAL,EACAI,MAtBR,4CA2BE,WAAU,IAAD,OACP,EAAqCK,KAAKN,MAAlCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAEtB,OACE,uBAAMK,UAAU,oBAAhB,UACE,qBACEA,UAAWC,IACT,QACA,CACE,UAAWN,EACX,wBAAyBA,IAL/B,UASGA,EAAU,UACJD,EADI,gBAEP,oBAEHC,GAEC,wBACE,UAAQ,cACRO,KAAK,SACLF,UAAU,cACVG,QAASJ,KAAKH,4BAKpB,uBAAOI,UAAU,QAAjB,SACE,gCACGb,EAAMiB,KAAI,SAACd,GACV,IAAIe,GAAoB,EAMxB,OAJIf,IAAYI,GAAgBC,IAC9BU,GAAoB,GAIpB,qBACE,UAAQ,OAERL,UAAWC,IACT,CACE,+BAAgCI,IALtC,UASE,6BACE,wBACE,UAASA,EAAoB,eAAiB,YAC9CH,KAAK,SACLC,QAAS,kBAAM,EAAKL,yBAClBR,EACAK,EACAD,IAEFM,UAAWC,IACT,SACA,CACE,UAAWI,IAXjB,SAeGA,EAAoB,IAAM,QAI/B,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACIV,MA5BCA,iBApEvB,GAAyBgB,aCpCzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8746380f.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n  isSelected: boolean;\n};\n\nfunction switcher(\n  condition: boolean,\n  product = '',\n  selected = '',\n): boolean {\n  if (product !== selected) {\n    return true;\n  }\n\n  if (condition) {\n    return false;\n  }\n\n  return true;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n    isSelected: true,\n  };\n\n  handleClickTitleButton = () => (\n    this.setState({\n      isSelected: false,\n    })\n  );\n\n  handleClickProductButton = (\n    product: string,\n    isSelected: boolean,\n    selectedGood: string,\n  ) => {\n    this.setState({\n      selectedGood: product,\n      isSelected: switcher(\n        isSelected,\n        product,\n        selectedGood,\n      ),\n    });\n  };\n\n  render() {\n    const { selectedGood, isSelected } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1\n          className={classNames(\n            'title',\n            {\n              'is-flex': isSelected,\n              'is-align-items-center': isSelected,\n            },\n          )}\n        >\n          {isSelected\n            ? `${selectedGood} is selected`\n            : 'No goods selected'}\n\n          {isSelected && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.handleClickTitleButton}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((product) => {\n              let isProductSelected = false;\n\n              if (product === selectedGood && isSelected) {\n                isProductSelected = true;\n              }\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={product}\n                  className={classNames(\n                    {\n                      'has-background-success-light': isProductSelected,\n                    },\n                  )}\n                >\n                  <td>\n                    <button\n                      data-cy={isProductSelected ? 'RemoveButton' : 'AddButton'}\n                      type=\"button\"\n                      onClick={() => this.handleClickProductButton(\n                        product,\n                        isSelected,\n                        selectedGood,\n                      )}\n                      className={classNames(\n                        'button',\n                        {\n                          'is-info': isProductSelected,\n                        },\n                      )}\n                    >\n                      {isProductSelected ? '-' : '+'}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    { product }\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}