{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleClickTitleButton","setState","handleClickProductButton","product","clearSelectedGood","this","className","classNames","type","onClick","map","isProductSelected","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,uBAAyB,kBACvB,EAAKC,SAAS,CACZF,aAAc,MAPpB,EAWEG,yBAA2B,SAACC,GACtB,EAAKL,MAAMC,eAAiBI,EAC9B,EAAKF,SAAS,CACZF,aAAc,KAGhB,EAAKE,SAAS,CACZF,aAAcI,KAlBtB,EAuBEC,kBAAoB,WACd,EAAKN,MAAMC,cACb,EAAKE,SAAS,CAAEF,aAAc,MAzBpC,4CA6BE,WAAU,IAAD,OACCA,EAAiBM,KAAKP,MAAtBC,aAER,OACE,uBAAMO,UAAU,oBAAhB,UACE,qBACEA,UAAWC,IACT,QACA,CACE,UAAWR,EACX,wBAAyBA,IAL/B,UASGA,EAAY,UACNA,EADM,gBAET,oBAEHA,GAEC,wBACE,UAAQ,cACRS,KAAK,SACLF,UAAU,cACVG,QAASJ,KAAKL,4BAKpB,uBAAOM,UAAU,QAAjB,SACE,gCACGV,EAAMc,KAAI,SAACP,GACV,IAAIQ,GAAoB,EAMxB,OAJIR,IAAYJ,IACdY,GAAoB,GAIpB,qBACE,UAAQ,OAERL,UAAWC,IACT,CACE,+BAAgCI,IALtC,UASE,6BACE,wBACE,UAASA,EAAoB,eAAiB,YAC9CH,KAAK,SACLC,QAAS,kBAAM,EAAKP,yBAAyBC,IAC7CG,UAAWC,IACT,SACA,CACE,UAAWI,IAPjB,SAWGA,EAAoB,IAAM,QAI/B,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACIH,MAxBCA,iBAtEvB,GAAyBS,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6b7a1e28.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  handleClickTitleButton = () => (\n    this.setState({\n      selectedGood: '',\n    })\n  );\n\n  handleClickProductButton = (product: string) => {\n    if (this.state.selectedGood === product) {\n      this.setState({\n        selectedGood: '',\n      });\n    } else {\n      this.setState({\n        selectedGood: product,\n      });\n    }\n  };\n\n  clearSelectedGood = () => {\n    if (this.state.selectedGood) {\n      this.setState({ selectedGood: '' });\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1\n          className={classNames(\n            'title',\n            {\n              'is-flex': selectedGood,\n              'is-align-items-center': selectedGood,\n            },\n          )}\n        >\n          {selectedGood\n            ? `${selectedGood} is selected`\n            : 'No goods selected'}\n\n          {selectedGood && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.handleClickTitleButton}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((product) => {\n              let isProductSelected = false;\n\n              if (product === selectedGood) {\n                isProductSelected = true;\n              }\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={product}\n                  className={classNames(\n                    {\n                      'has-background-success-light': isProductSelected,\n                    },\n                  )}\n                >\n                  <td>\n                    <button\n                      data-cy={isProductSelected ? 'RemoveButton' : 'AddButton'}\n                      type=\"button\"\n                      onClick={() => this.handleClickProductButton(product)}\n                      className={classNames(\n                        'button',\n                        {\n                          'is-info': isProductSelected,\n                        },\n                      )}\n                    >\n                      {isProductSelected ? '-' : '+'}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    { product }\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}